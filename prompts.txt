<!DOCTYPE html> <html lang="ar"> <head>     <meta charset="UTF-8">     <meta name="viewport" content="width=device-width, initial-scale=1.0">     <title>بوت تداول العملات المشفرة</title>     <style>         body {             font-family: Arial, sans-serif;             background-color: #f4f4f9;             margin: 0;             padding: 20px;         }         .container {             max-width: 800px;             margin: auto;             background: #fff;             padding: 20px;             border-radius: 8px;             box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);         }         h1 {             text-align: center;             color: #333;         }         .form-group {             margin-bottom: 15px;         }         label {             display: block;             margin-bottom: 5px;             color: #555;         }         input[type="text"], select {             width: 100%;             padding: 8px;             box-sizing: border-box;             border: 1px solid #ccc;             border-radius: 4px;         }         button {             width: 100%;             padding: 10px;             background-color: #28a745;             color: white;             border: none;             border-radius: 4px;             cursor: pointer;             font-size: 16px;         }         button:hover {             background-color: #218838;         }         .result {             margin-top: 20px;             padding: 15px;             background-color: #e9ecef;             border-radius: 4px;         }         .result p {             margin: 5px 0;         }         .coin-list {             max-height: 150px;             overflow-y: auto;             border: 1px solid #ccc;             border-radius: 4px;             padding: 10px;             margin-top: 10px;         }         .coin-item {             cursor: pointer;             padding: 5px;             border-radius: 4px;         }         .coin-item:hover {             background-color: #f0f0f0;         }         .hint {             font-size: 12px;             color: #888;             margin-top: 5px;         }     </style> </head> <body> <div class="container">     <h1>بوت تداول العملات المشفرة</h1>     <div class="form-group">         <label for="search">ابحث عن عملة:</label>         <input type="text" id="search" placeholder="اكتب اسم العملة..." oninput="filterCoins()">         <div class="hint" id="hint">تلميح: ابحث باستخدام الاسم الكامل للعملة (مثل Bitcoin أو Ethereum).</div>     </div>     <div class="coin-list" id="coinList">         <!-- العملات ستظهر هنا -->     </div>     <button onclick="analyzeCoin()">تحليل وتقديم توصيات</button>     <div id="result" class="result" style="display: none;">         <h3>نتائج التحليل</h3>         <p><strong>العملة:</strong> <span id="coinName"></span></p>         <p><strong>السعر الحالي:</strong> <span id="currentPrice"></span></p>         <p><strong>سعر الدخول:</strong> <span id="entryPrice"></span></p>         <p><strong>نوع الصفقة:</strong> <span id="tradeType"></span></p>         <p><strong>الرافعة المالية:</strong> <span id="leverage"></span></p>         <p><strong>اتجاه الصفقة:</strong> <span id="tradeDirection"></span></p>         <p><strong>نسبة نجاح الصفقة:</strong> <span id="successRate"></span></p>         <p><strong>مدة الصفقة:</strong> <span id="tradeDuration"></span></p>         <p><strong>أهداف سريعة:</strong> <span id="quickTargets"></span></p>         <p><strong>أهداف متوسطة المدى:</strong> <span id="mediumTargets"></span></p>         <p><strong>وقف الخسارة:</strong> <span id="stopLoss"></span></p>         <p><strong>تحليل مؤشر القوة النسبية (RSI):</strong> <span id="rsiAnalysis"></span></p>         <p><strong>تحليل المتوسطات المتحركة:</strong> <span id="maAnalysis"></span></p>         <p><strong>تحليل بولينجر باند:</strong> <span id="bollingerAnalysis"></span></p>     </div> </div>  <script>     const binanceApiKey = "xWDgg95Hd4l7GpUyJDIR4DxBvh80kUo8joQBeD5HJUUp4BZotwz8JVLPmphgcUOR";     const botToken = "8014887970:AAH4SDRwMZoBztVBOf2NjV5CSsL65BHgbC4";      let supportedCoins = [];     let selectedCoin = null;      // جلب جميع العملات من Binance Futures API     async function fetchSupportedCoins() {         try {             const response = await fetch("https://fapi.binance.com/fapi/v1/exchangeInfo");             if (!response.ok) throw new Error("فشل في جلب بيانات العملات");             const data = await response.json();             supportedCoins = data.symbols                 .filter(symbol => symbol.contractType === "PERPETUAL") // فقط العقود الآجلة الدائمة                 .map(symbol => ({                     symbol: symbol.symbol,                     name: `${symbol.baseAsset} (${symbol.quoteAsset})`                 }));             displayCoins(supportedCoins); // عرض العملات بعد جلبها         } catch (error) {             alert("حدث خطأ أثناء جلب العملات: " + error.message);         }     }      // عرض العملات في القائمة     function displayCoins(coins) {         const coinList = document.getElementById("coinList");         coinList.innerHTML = "";         if (coins.length === 0) {             coinList.innerHTML = "<div style='text-align: center; color: #888;'>لم يتم العثور على عملات.</div>";             return;         }         coins.forEach(coin => {             const coinItem = document.createElement("div");             coinItem.className = "coin-item";             coinItem.textContent = coin.name;             coinItem.onclick = () => selectCoin(coin);             coinList.appendChild(coinItem);         });     }      // تحديد العملة عند النقر عليها     function selectCoin(coin) {         selectedCoin = coin;         document.getElementById("search").value = coin.name;         document.getElementById("coinList").innerHTML = ""; // إخفاء القائمة بعد الاختيار     }      // فلترة العملات بناءً على البحث     function filterCoins() {         const query = document.getElementById("search").value.toLowerCase();         const filteredCoins = supportedCoins.filter(coin =>             coin.name.toLowerCase().includes(query)         );         displayCoins(filteredCoins);          // تحديث التلميح بناءً على نتائج البحث         const hintElement = document.getElementById("hint");         if (query.trim() === "") {             hintElement.textContent = "تلميح: ابحث باستخدام الاسم الكامل للعملة (مثل Bitcoin أو Ethereum).";         } else if (filteredCoins.length === 0) {             hintElement.textContent = "لم يتم العثور على عملات مطابقة. حاول استخدام اسم آخر.";         } else {             hintElement.textContent = `تم العثور على ${filteredCoins.length} عملات.`;         }     }      // تحليل العملة المحددة     async function analyzeCoin() {         if (!selectedCoin) {             alert("يرجى اختيار عملة أولاً.");             return;         }          const resultDiv = document.getElementById("result");         resultDiv.style.display = "none";          try {             // جلب بيانات السعر الحالي             const priceResponse = await fetch(`https://fapi.binance.com/fapi/v1/ticker/price?symbol=${selectedCoin.symbol}`);             if (!priceResponse.ok) throw new Error("فشل في جلب بيانات السعر");             const priceData = await priceResponse.json();              // جلب بيانات المؤشرات الفنية (RSI، المتوسطات المتحركة، بولينجر باند)             const klinesResponse = await fetch(`https://fapi.binance.com/fapi/v1/klines?symbol=${selectedCoin.symbol}&interval=15m&limit=50`);             if (!klinesResponse.ok) throw new Error("فشل في جلب بيانات المؤشرات");             const klinesData = await klinesResponse.json();              // حساب RSI             const closes = klinesData.map(kline => parseFloat(kline[4]));             const rsi = calculateRSI(closes);             const rsiAnalysis = rsi > 70 ? "مبالغ فيها (Overbought)" : rsi < 30 ? "متدنية (Oversold)" : "محايدة";              // حساب المتوسطات المتحركة             const maShort = calculateMA(closes, 10);             const maLong = calculateMA(closes, 50);             const maAnalysis = maShort > maLong ? "إشارات صعود" : "إشارات هبوط";              // حساب بولينجر باند             const [upperBand, lowerBand] = calculateBollingerBands(closes);             const currentPrice = parseFloat(priceData.price);             const bollingerAnalysis = currentPrice > upperBand ? "خارج النطاق العلوي (Sell Signal)"                 : currentPrice < lowerBand ? "خارج النطاق السفلي (Buy Signal)" : "داخل النطاق (Neutral)";              // تحديد نوع الصفقة بناءً على توافق المؤشرات             let tradeType = "شراء"; // افتراضي             let tradeDirection = "صعود"; // افتراضي             let successRate = "50%"; // افتراضي              if ((rsi < 30 && bollingerAnalysis.includes("Buy")) || (maAnalysis === "إشارات صعود" && rsi < 70)) {                 tradeType = "شراء";                 tradeDirection = "صعود";                 successRate = "85%";             } else if ((rsi > 70 && bollingerAnalysis.includes("Sell")) || (maAnalysis === "إشارات هبوط" && rsi > 30)) {                 tradeType = "بيع";                 tradeDirection = "هبوط";                 successRate = "85%";             } else {                 tradeType = "محايد";                 tradeDirection = "محايد";                 successRate = "50%";             }              // محاكاة التحليل الفني             const entryPrice = (currentPrice * 0.999).toFixed(6); // افتراض دخول قريب من السعر الحالي             const leverage = "10x"; // الرافعة المالية المفترضة             const tradeDuration = "15 دقيقة"; // صفقات قصيرة الأجل             const quickTargets = [                 (currentPrice * 1.001).toFixed(6),                 (currentPrice * 1.002).toFixed(6),                 (currentPrice * 1.003).toFixed(6)             ].join(", ");             const mediumTargets = [                 (currentPrice * 1.01).toFixed(6),                 (currentPrice * 1.02).toFixed(6),                 (currentPrice * 1.03).toFixed(6)             ].join(", "); // أهداف متوسطة المدى             const stopLoss = (currentPrice * 0.995).toFixed(6);              // عرض النتائج             document.getElementById("coinName").textContent = selectedCoin.name;             document.getElementById("currentPrice").textContent = currentPrice.toFixed(6);             document.getElementById("entryPrice").textContent = entryPrice;             document.getElementById("tradeType").textContent = tradeType;             document.getElementById("leverage").textContent = leverage;             document.getElementById("tradeDirection").textContent = tradeDirection;             document.getElementById("successRate").textContent = successRate;             document.getElementById("tradeDuration").textContent = tradeDuration;             document.getElementById("quickTargets").textContent = quickTargets;             document.getElementById("mediumTargets").textContent = mediumTargets;             document.getElementById("stopLoss").textContent = stopLoss;             document.getElementById("rsiAnalysis").textContent = rsiAnalysis;             document.getElementById("maAnalysis").textContent = maAnalysis;             document.getElementById("bollingerAnalysis").textContent = bollingerAnalysis;              resultDiv.style.display = "block";              // إرسال النتائج إلى Telegram             sendToTelegram(selectedCoin.name, currentPrice.toFixed(6), entryPrice, tradeType, leverage, tradeDirection, successRate, tradeDuration, quickTargets, mediumTargets, stopLoss, rsiAnalysis, maAnalysis, bollingerAnalysis);         } catch (error) {             alert("حدث خطأ أثناء تحليل العملة: " + error.message);         }     }      // حساب مؤشر القوة النسبية (RSI)     function calculateRSI(closes) {         const gains = [], losses = [];         for (let i = 1; i < closes.length; i++) {             const change = closes[i] - closes[i - 1];             if (change > 0) {                 gains.push(change);                 losses.push(0);             } else {                 gains.push(0);                 losses.push(-change);             }         }         const avgGain = gains.slice(-14).reduce((a, b) => a + b, 0) / 14;         const avgLoss = losses.slice(-14).reduce((a, b) => a + b, 0) / 14;         const rs = avgGain / avgLoss || 0;         return 100 - (100 / (1 + rs));     }      // حساب المتوسطات المتحركة     function calculateMA(data, period) {         const slice = data.slice(-period);         return slice.reduce((a, b) => a + b, 0) / period;     }      // حساب بولينجر باند     function calculateBollingerBands(data) {         const period = 20;         const slice = data.slice(-period);         const sma = slice.reduce((a, b) => a + b, 0) / period;         const variance = slice.reduce((a, b) => a + Math.pow(b - sma, 2), 0) / period;         const stdDev = Math.sqrt(variance);         const upperBand = sma + (2 * stdDev);         const lowerBand = sma - (2 * stdDev);         return [upperBand, lowerBand];     }      // إرسال النتائج إلى Telegram     async function sendToTelegram(coinName, currentPrice, entryPrice, tradeType, leverage, tradeDirection, successRate, tradeDuration, quickTargets, mediumTargets, stopLoss, rsiAnalysis, maAnalysis, bollingerAnalysis) {         const chatId = "YOUR_TELEGRAM_CHAT_ID"; // استبدل هذا بمعرف الدردشة الخاص بك         const message = ` 📊 *تحليل وتوصيات التداول* 📊  💎 *العملة:* ${coinName} 💰 *السعر الحالي:* ${currentPrice} 🎯 *سعر الدخول:* ${entryPrice} 📈 *نوع الصفقة:* ${tradeType} ⚙️ *الرافعة المالية:* ${leverage} 🔄 *اتجاه الصفقة:* ${tradeDirection} 💯 *نسبة نجاح الصفقة:* ${successRate} ⏳ *مدة الصفقة:* ${tradeDuration} ⚡️ *أهداف سريعة:* ${quickTargets} 中期目标: ${mediumTargets} 🛑 *وقف الخسارة:* ${stopLoss} 📊 *تحليل مؤشر القوة النسبية (RSI):* ${rsiAnalysis} 📊 *تحليل المتوسطات المتحركة:* ${maAnalysis} 📊 *تحليل بولينجر باند:* ${bollingerAnalysis}         `.replace(/_/g, '\\_'); // Escape underscores for Markdown          const url = `https://api.telegram.org/bot${botToken}/sendMessage`;         const params = {             chat_id: chatId,             text: message,             parse_mode: "Markdown"         };          try {             const response = await fetch(url, {                 method: "POST",                 headers: {                     "Content-Type": "application/json"                 },                 body: JSON.stringify(params)             });              if (!response.ok) {                 throw new Error("فشل في إرسال الرسالة إلى Telegram");             }         } catch (error) {             console.error("خطأ في إرسال الرسالة إلى Telegram:", error);         }     }      // جلب العملات عند بدء الصفحة     fetchSupportedCoins(); </script> </body> </html>
تشغيل وضائف الازرار  زر ارسال التوصية يقوم بمشاركة التوصية. زر حفظ التوصية في السجل يقوم بحفظ التوصية في سجل بيانات المحفوظات. زر تحديث البيانات يقوم بتحديث بيانات العملة الذي تم اختيارها. اضف زر نسخ لنسخ التوصية 